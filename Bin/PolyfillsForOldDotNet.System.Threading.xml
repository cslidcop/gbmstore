<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PolyfillsForOldDotNet.System.Threading</name>
    </assembly>
    <members>
        <member name="T:PolyfillsForOldDotNet.System.Threading.Volatile">
            <summary>
            Contains methods for performing volatile memory operations.
            </summary>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.Boolean@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.Byte@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.Double@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.Int16@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.Int32@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.Int64@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.IntPtr@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.SByte@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.Single@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.UInt16@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.UInt32@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.UInt64@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read(System.UIntPtr@)">
            <summary>
            Reads the value of the specified field. On systems that require it, inserts a memory barrier
            that prevents the processor from reordering memory operations as follows: If a read or write
            appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <returns>The value that was read. This value is the latest written by any processor in
            the computer, regardless of the number of processors or the state of processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Read``1(``0@)">
            <summary>
            Reads the object reference from the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read
            or write appears after this method in the code, the processor cannot move it before this method.
            </summary>
            <param name="location">The field to read.</param>
            <typeparam name="T">The type of field to read. This must be a reference type, not a value type.</typeparam>
            <returns>The reference to <typeparamref name="T"/> that was read. This reference is the latest
            written by any processor in the computer, regardless of the number of processors or the state of
            processor cache.</returns>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.Boolean@,System.Boolean)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.Byte@,System.Byte)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.Double@,System.Double)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.Int16@,System.Int16)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.Int32@,System.Int32)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.Int64@,System.Int64)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a memory
            operation appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.IntPtr@,System.IntPtr)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.SByte@,System.SByte)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.Single@,System.Single)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.UInt16@,System.UInt16)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.UInt32@,System.UInt32)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.UInt64@,System.UInt64)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write(System.UIntPtr@,System.UIntPtr)">
            <summary>
            Writes the specified value to the specified field. On systems that require it, inserts a memory
            barrier that prevents the processor from reordering memory operations as follows: If a read or
            write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the value is written.</param>
            <param name="value">The value to write. The value is written immediately so that it is visible
            to all processors in the computer.</param>
        </member>
        <member name="M:PolyfillsForOldDotNet.System.Threading.Volatile.Write``1(``0@,``0)">
            <summary>
            Writes the specified object reference to the specified field. On systems that require it, inserts
            a memory barrier that prevents the processor from reordering memory operations as follows: If a
            read or write appears before this method in the code, the processor cannot move it after this method.
            </summary>
            <param name="location">The field where the object reference is written.</param>
            <param name="value">The object reference to write. The reference is written immediately so that it
            is visible to all processors in the computer.</param>
            <typeparam name="T">The type of field to write. This must be a reference type, not a value type.</typeparam>
        </member>
    </members>
</doc>
